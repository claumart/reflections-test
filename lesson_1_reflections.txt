1- How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Let you see the lines that are different more esaly

2- How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Making backups of the file's versions in a directory or we can use special applications like drop box, Google Docs, etc

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:

    Cons:


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Cause the context is different, in Git youÂ´re develomenting software wich means multiple files instead 
    Google Docs where you only work with a single file per time

How can you use the commands git log and git diff to view the history of files?

	You can use them with the console by writing the correct syntax for the commands

How might using version control make you more confident to make changes that
could break something?

    It's easier back to a stable version of your work cause you can seek the error faster

Now that you have your workspace set up, what do you want to try using Git for?

    I want to try to use Git for compare my code files when i'm programing a new application and for my writings when i'm making an inform
